SIDEBAR + ROUTING INTEGRATION (Copy/Paste Guide)

1) Create file: src/component/Sidebar.jsx

--- src/component/Sidebar.jsx ---
import React from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { useAuth } from './AuthContext';

function Sidebar() {
  const location = useLocation();
  const navigate = useNavigate();
  const { logout } = useAuth();

  const linkBase = 'hover:text-blue-300';
  const isActive = (path) => location.pathname.startsWith(path);

  return (
    <div className="rounded-br-2xl rounded-tr-2xl w-64 bg-gray-800 text-white h-full p-4 overflow-y-auto">
      <h2 className="text-xl font-bold mb-6">Admin Dashboard</h2>
      <div className='flex flex-col justify-between h-[90%]'>
        <ul>
          <li className="mb-4">
            <Link to="/students" className={`${linkBase} ${isActive('/students') ? 'text-blue-300' : ''}`}>Students</Link>
          </li>
          <li className="mb-4">
            <Link to="/teachers" className={`${linkBase} ${isActive('/teachers') ? 'text-blue-300' : ''}`}>Teachers</Link>
          </li>
          <li className="mb-4">
            <Link to="/courses" className={`${linkBase} ${isActive('/courses') ? 'text-blue-300' : ''}`}>Courses</Link>
          </li>
        </ul>
        <button
          onClick={() => { logout(); navigate('/login'); }}
          className="w-[50%] bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 cursor-pointer transition-transform duration-300 hover:scale-[1.04]"
        >
          Logout
        </button>
      </div>
    </div>
  );
}

export default Sidebar;
--- end Sidebar.jsx ---


2) Update Students.jsx to use Sidebar and remove nested layout

--- src/component/Students.jsx ---
import React, { useState } from 'react';
import { students as initialStudents } from '../data/DummyData';
import Table from './Table';
import Sidebar from './Sidebar';
import { useAuth } from './AuthContext';
import { Navigate } from 'react-router-dom';

function Students() {
  const { isLoggedIn } = useAuth();
  const [students, setStudents] = useState(initialStudents);
  const [newStudent, setNewStudent] = useState({ name: '', grade: '' });

  if (!isLoggedIn) {
    return <Navigate to="/login" replace />;
  }

  const handleAdd = () => {
    if (newStudent.name && newStudent.grade) {
      setStudents([...students, { id: students.length + 1, ...newStudent }]);
      setNewStudent({ name: '', grade: '' });
    }
  };

  const handleDelete = (id) => {
    setStudents(students.filter((student) => student.id !== id));
  };

  const columns = ['Name', 'Grade'];

  return (
    <div className="flex flex-row min-h-screen bg-blue-800">
      <Sidebar />
      <main className="flex-1 p-8 bg-gray-300 rounded-tl-2xl">
        <div className="text-center text-gray-700 ">
          <h1 className="text-3xl font-bold mb-4">Students</h1>
        </div>
        <div className="mb-6">
          <input
            type="text"
            placeholder="Name"
            value={newStudent.name}
            onChange={(e) => setNewStudent({ ...newStudent, name: e.target.value })}
            className="border p-2 mr-2 rounded"
          />
          <input
            type="text"
            placeholder="Grade"
            value={newStudent.grade}
            onChange={(e) => setNewStudent({ ...newStudent, grade: e.target.value })}
            className="border p-2 mr-2 rounded"
          />
          <button
            onClick={handleAdd}
            className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
          >
            Add Student
          </button>
        </div>
        <Table data={students} columns={columns} onDelete={handleDelete} />
      </main>
    </div>
  );
}

export default Students;
--- end Students.jsx ---


3) Update Teachers.jsx to use Sidebar

--- src/component/Teachers.jsx ---
import React, { useState } from 'react';
import { teachers as initialTeachers } from '../data/DummyData';
import Table from './Table';
import Sidebar from './Sidebar';
import { useAuth } from './AuthContext';
import { Navigate } from 'react-router-dom';

function Teachers() {
  const { isLoggedIn } = useAuth();
  const [teachers, setTeachers] = useState(initialTeachers);
  const [newTeacher, setNewTeacher] = useState({ name: '', subject: '' });

  if (!isLoggedIn) {
    return <Navigate to="/login" replace />;
  }

  const handleAdd = () => {
    if (newTeacher.name && newTeacher.subject) {
      setTeachers([...teachers, { id: teachers.length + 1, ...newTeacher }]);
      setNewTeacher({ name: '', subject: '' });
    }
  };

  const handleDelete = (id) => {
    setTeachers(teachers.filter((teacher) => teacher.id !== id));
  };

  const columns = ['Name', 'Subject'];

  return (
    <div className="flex flex-row min-h-screen bg-blue-800">
      <Sidebar />
      <main className="flex-1 p-8 bg-gray-300 rounded-tl-2xl">
        <div className="text-center text-gray-700 ">
          <h1 className="text-3xl font-bold mb-4">Teachers</h1>
        </div>
        <div className="mb-6">
          <input
            type="text"
            placeholder="Name"
            value={newTeacher.name}
            onChange={(e) => setNewTeacher({ ...newTeacher, name: e.target.value })}
            className="border p-2 mr-2 rounded"
          />
          <input
            type="text"
            placeholder="Subject"
            value={newTeacher.subject}
            onChange={(e) => setNewTeacher({ ...newTeacher, subject: e.target.value })}
            className="border p-2 mr-2 rounded"
          />
          <button
            onClick={handleAdd}
            className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
          >
            Add Teacher
          </button>
        </div>
        <Table data={teachers} columns={columns} onDelete={handleDelete} />
      </main>
    </div>
  );
}

export default Teachers;
--- end Teachers.jsx ---


4) Update Courses.jsx to use Sidebar

--- src/component/Courses.jsx ---
import React, { useState } from 'react';
import { courses as initialCourses } from '../data/DummyData';
import Table from './Table';
import Sidebar from './Sidebar';
import { useAuth } from './AuthContext';
import { Navigate } from 'react-router-dom';

function Courses() {
  const { isLoggedIn } = useAuth();
  const [courses, setCourses] = useState(initialCourses);
  const [newCourse, setNewCourse] = useState({ name: '', teacher: '' });

  if (!isLoggedIn) {
    return <Navigate to="/login" replace />;
  }

  const handleAdd = () => {
    if (newCourse.name && newCourse.teacher) {
      setCourses([...courses, { id: courses.length + 1, ...newCourse }]);
      setNewCourse({ name: '', teacher: '' });
    }
  };

  const handleDelete = (id) => {
    setCourses(courses.filter((course) => course.id !== id));
  };

  const columns = ['Name', 'Teacher'];

  return (
    <div className="flex flex-row min-h-screen bg-blue-800">
      <Sidebar />
      <main className="flex-1 p-8 bg-gray-300 rounded-tl-2xl">
        <div className="text-center text-gray-700 ">
          <h1 className="text-3xl font-bold mb-4">Courses</h1>
        </div>
        <div className="mb-6">
          <input
            type="text"
            placeholder="Course Name"
            value={newCourse.name}
            onChange={(e) => setNewCourse({ ...newCourse, name: e.target.value })}
            className="border p-2 mr-2 rounded"
          />
          <input
            type="text"
            placeholder="Teacher Name"
            value={newCourse.teacher}
            onChange={(e) => setNewCourse({ ...newCourse, teacher: e.target.value })}
            className="border p-2 mr-2 rounded"
          />
          <button
            onClick={handleAdd}
            className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
          >
            Add Course
          </button>
        </div>
        <Table data={courses} columns={columns} onDelete={handleDelete} />
      </main>
    </div>
  );
}

export default Courses;
--- end Courses.jsx ---


5) Update App.jsx to remove nested routes and link directly to pages

--- src/App.jsx ---
import { Routes, Route } from "react-router-dom";
import Login from './component/login';
import Dashboard from './component/Dashboard';
import Students from './component/Students';
import Teachers from './component/Teachers';
import Courses from './component/Courses';

function App() {
  return (
    <div className="App">
      <Routes>
        <Route path="/login" element={<Login />} />
        <Route path="/dashboard" element={<Dashboard />} />
        <Route path="/students" element={<Students />} />
        <Route path="/teachers" element={<Teachers />} />
        <Route path="/courses" element={<Courses />} />
        <Route path="/" element={<Login />} />
      </Routes>
    </div>
  );
}

export default App;
--- end App.jsx ---


HOW TO INTEGRATE
- Create the new file `src/component/Sidebar.jsx` with the provided code.
- Replace the contents of `Students.jsx`, `Teachers.jsx`, and `Courses.jsx` with the provided versions (they import and render `Sidebar`).
- Update `App.jsx` to remove nested routes and add direct routes for `/students`, `/teachers`, `/courses`.
- Optional: If you plan to keep `Dashboard.jsx`, it can remain as a separate page; it no longer needs to wrap the others.
- Ensure `AuthContext.jsx` remains as updated so auth persists and `/login` redirects work.

Thatâ€™s it. Copy/paste each section into its respective file.
